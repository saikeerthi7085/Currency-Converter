{"version":3,"sources":["images/double-arrow.png","Components/InputFields.js","Components/Customconversions.js","Components/Conversions.js","App.js","i18n/i18n_config.js","i18n/locale/en_locale.js","i18n/locale/de_locale.js","index.js"],"names":["InputFields","props","Codenames","defaultoption","onchangecurrency","onChangeAmount","amount","Flag","t","className","value","onChange","Object","keys","map","code","Codename","type","placeholder","Customconversions","fromcustom","tocustom","useState","customInFromCurrency","setCustomInFromCurrency","CustomAmount","setcustomAmount","Rate","setRate","Required","e","target","id","Conversions","toAmount","fromAmount","Bgcolor","codeNames","setCodenames","fromcurrency","setfromcurrency","tocurrency","settocurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","flag","setflag","useEffect","fetch","then","res","json","data","console","log","rates","src","arrowmark","alt","style","onClick","Maincomponent","bgcolor","setbgcolor","font","setFont","useTranslation","i18n","document","getElementById","fontFamily","hex","name","Font","key","changeLanguage","App","fallback","use","LanguageDetector","initReactI18next","init","resources","en","translation","Title","CustomTitle","CustomStyle","RateCalculation","ClearFields","Goback","Base","Target","Amount","verdana","Trebuchet","Garamond","cursive","de","ReactDOM","render","StrictMode","I18nextProvider"],"mappings":"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","file":"static/js/main.eee7d80f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/double-arrow.271a6417.png\";","import React from 'react'\r\nimport '../Styles/textbox.css';\r\n\r\nexport default function InputFields(props) {\r\n    const {\r\n        Codenames,defaultoption,onchangecurrency,onChangeAmount,amount,Flag,t\r\n    }= props\r\n   \r\n    return (\r\n        <>\r\n        {  \r\n            Flag==='N' ? \r\n            <>\r\n            <div className=\"m-5 \">\r\n                <select className=\" dropdown m-2\" value= {defaultoption} onChange={onchangecurrency}>\r\n                    { Object.keys(Codenames).map((code,Codename)=>(\r\n                        <option key={Codename} value={code}>{Codenames[code]}</option>\r\n                    ))}   \r\n                </select>\r\n                <input type=\"number\"  className=\"inputfield m-2\"  value={amount} onChange={onChangeAmount}/>\r\n            </div>\r\n        </>\r\n            :\r\n            <input type=\"number\"  className=\"inputfield m-2\" placeholder={t(\"Amount\")} value={amount} onChange={onChangeAmount}/>\r\n        }\r\n        \r\n       </>\r\n        \r\n    )\r\n}\r\n","import React, {useState } from 'react';\r\nimport '../App.css';\r\nimport InputFields from  './InputFields';\r\n\r\nfunction Customconversions(props) {\r\n    const {\r\n        t\r\n    }=props\r\n    const [customInFromCurrency, setCustomInFromCurrency] = useState(true)\r\n    const [CustomAmount, setcustomAmount] = useState(1)\r\n    const [Rate, setRate] = useState();\r\n  \r\n   let fromcustom,tocustom;\r\n    function handleFromcustomChange(e) {\r\n        setcustomAmount(e.target.value)\r\n        setCustomInFromCurrency(true)\r\n      }\r\n    \r\n      function handleTocustomChange(e) {\r\n        setcustomAmount(e.target.value)\r\n     \r\n        setCustomInFromCurrency(false)\r\n      }\r\n \r\n      if (customInFromCurrency) {\r\n        fromcustom= CustomAmount;\r\n        tocustom= CustomAmount * Rate\r\n      \r\n    \r\n    } else {\r\n        fromcustom= CustomAmount/Rate\r\n        tocustom= CustomAmount \r\n    \r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <center>\r\n                    <input type=\"text\"  placeholder={t(\"Base\")} className=\"m-2 p-2\"></input>\r\n                    <input type=\"text\" placeholder={t(\"Target\")} className=\"m-2 p-2\"></input>\r\n                    <input type=\"number\" Required placeholder={t(\"Rate\")} className=\"m-2 p-2\" value={Rate} onChange={e=>setRate(e.target.value)}></input>\r\n                    </center>\r\n        <div id=\"box1\">\r\n        <InputFields   \r\n        amount={fromcustom}\r\n        onChangeAmount={handleFromcustomChange}\r\n        Flag='Y' t={t}/>\r\n\r\n        <InputFields \r\n        amount={tocustom}\r\n        onChangeAmount={handleTocustomChange}\r\n        Flag='Y' t={t}/>\r\n\r\n        \r\n      \r\n </div>\r\n </>\r\n    )\r\n}\r\n\r\nexport default Customconversions\r\n","import React, { useEffect,useState } from 'react';\r\nimport '../App.css';\r\n\r\nimport arrowmark from '../images/double-arrow.png'\r\nimport InputFields from  './InputFields';\r\nimport Customconversions from './Customconversions';\r\nconst Rate_URL = 'https://openexchangerates.org/api/latest.json?app_id=bf711ec61d894a28ba5e162cd73d5c10'\r\nconst Codes_URL = 'https://openexchangerates.org/api/currencies.json'\r\n\r\nfunction Conversions(props) {\r\n    const {\r\n        Bgcolor,t\r\n    }= props\r\n\r\n    const [codeNames,setCodenames] = useState([])\r\n    const [fromcurrency,setfromcurrency]= useState();\r\n    const [tocurrency,settocurrency]= useState();\r\n   \r\n    \r\n    const [exchangeRate, setExchangeRate] = useState()\r\n    const [amount, setAmount] = useState(1)\r\n    const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n    const [flag,setflag] = useState('N')\r\n    let toAmount, fromAmount;\r\n    if (amountInFromCurrency) {\r\n      fromAmount = amount\r\n      toAmount = amount * exchangeRate\r\n    } else {\r\n      toAmount = amount\r\n      fromAmount = amount / exchangeRate\r\n    }\r\n    useEffect(() => {\r\n  \r\n        fetch(Codes_URL)\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n  \r\n          setCodenames(data)\r\n          setfromcurrency('GBP')\r\n          settocurrency('INR')\r\n     } )\r\n  \r\n    },[])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if (fromcurrency != null && tocurrency != null) {\r\n          console.log(fromcurrency);\r\n          console.log(tocurrency);\r\n      fetch(`${Rate_URL}&base=${fromcurrency}&symbols=${tocurrency}`)\r\n      .then(res => res.json())\r\n      .then(data =>{ setExchangeRate(data.rates[tocurrency]) } )\r\n      }   \r\n        \r\n        }, [fromcurrency, tocurrency])\r\n\r\n  \r\n        function handleFromAmountChange(e) {\r\n          setAmount(e.target.value)\r\n          console.log(e.target.value)\r\n          setAmountInFromCurrency(true)\r\n        }\r\n      \r\n        function handleToAmountChange(e) {\r\n          setAmount(e.target.value)\r\n          console.log(\"From\")\r\n\r\n          console.log(e.target.value)\r\n          setAmountInFromCurrency(false)\r\n        }\r\n      \r\n        function clearfields(){\r\n            setAmountInFromCurrency(true);\r\n            setAmount(1);\r\n            setfromcurrency('GBP')\r\n            settocurrency('INR')\r\n\r\n        }\r\n   \r\n    return (\r\n       <>\r\n        {flag ==='N' ?\r\n        <>\r\n            <div id=\"box1\">\r\n            <InputFields  Codenames={codeNames} \r\n             defaultoption ={fromcurrency}\r\n             onchangecurrency ={e=>setfromcurrency(e.target.value)}\r\n             amount={fromAmount}\r\n             onChangeAmount={handleFromAmountChange}\r\n             Flag={flag}/>\r\n\r\n             <img src={arrowmark} alt=\"Arrow.mark\" className=\"image mt-5\" />\r\n\r\n             <InputFields Codenames={codeNames} \r\n             defaultoption={tocurrency} \r\n             onchangecurrency ={e=>settocurrency(e.target.value)}\r\n             amount={toAmount}\r\n             onChangeAmount={handleToAmountChange}\r\n             Flag={flag}/>\r\n       </div>\r\n        <div className=\"row buttons\" >\r\n        <input type=\"button\" className=\"btn button m-4\" style={{'background-color': Bgcolor}} value={t(\"RateCalculation\")} onClick={()=> setflag('Y')}/>\r\n        <input type=\"button\" className=\"btn button m-4\" style={{'background-color': Bgcolor}} value ={t(\"ClearFields\")} onClick={()=> clearfields()}/>\r\n        </div>\r\n        </>\r\n       \r\n        :\r\n\r\n        <>\r\n            <div className=\"m-3\">\r\n                <div id=\"box2\"> \r\n                    <h4 className=\"text-center m-4\"> {t('CustomTitle')}</h4>\r\n                    \r\n        <Customconversions t={t}/>\r\n      \r\n\r\n                </div>\r\n                \r\n                <div className=\"row buttons\" >\r\n                    <input type=\"button\" className=\"btn button m-4\" style={{'background-color': Bgcolor}} value ='Go Back' onClick={()=> setflag('N')}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n    }\r\n         </>\r\n    )\r\n}\r\n\r\nexport default Conversions\r\n\r\n","import React,{Suspense, useState} from 'react';\nimport './App.css';\nimport Conversions from \"./Components/Conversions\"\nimport { useTranslation } from 'react-i18next';\n\nfunction Maincomponent() {\n  var colors = [\n    {\n      hex: '#008080',\n      name: 'Teal'\n    },\n    {\n      hex: '#898989',\n      name: 'Grey'\n    },\n    {\n      hex: '#A71930',\n      name: 'Red'\n    },\n    {\n      hex: '#6495ED',\n      name: 'Blue'\n    }\n  ];\n  var FontFamily = [\n    {\n      name: 'Verdana',\n      value: 'Verdana sans-serif'\n    },\n    {\n      name: 'Trebuchet',\n      value: '\\'Trebuchet MS\\', sans-serif'\n    },\n    {\n      name: 'Garamond',\n      value: 'Garamond, serif'\n    },\n    {\n      name: 'cursive',\n      value:'\\'Brush Script MT\\', cursive'\n    }\n  ];\n  const [bgcolor, setbgcolor] = useState();\n  const [font, setFont] = useState();\n  const {t, i18n}= useTranslation();\n  document.getElementById(\"body\").style.fontFamily = font;\n  return (\n    \n    <div className=\"container app\" style={{'backgroundColor': bgcolor}}> \n      <h1 className=\"text-center m-3 mt-5\">{t(\"Title\")}</h1>\n      <div className=\"row\">\n        <div className=\"col-8 m-3\" id=\"box\"  >\n          \n              <Conversions Bgcolor={bgcolor} t={t}/>\n             \n              \n        </div>\n        <div className=\"col-3 m-3\" id=\"smallbox\" >\n          <center>\n          <h5 className=\"m-3\">{t(\"CustomStyle\")}</h5>\n        \n          <div className=\"outerdiv\">\n          { colors.map((code,Codename)=>(\n                  <button  value={code.hex} className=\"innerdiv\" onClick={()=>setbgcolor(code.hex)} style={{'background-color': code.hex }}></button>\n             ))}\n         </div>\n\n         <div className=\"fontbox row  m-3\">\n          { FontFamily.map((Font,key)=>(\n                  <button   className=\" m-2\" style={{'fontFamily':Font.value}} onClick={()=>setFont(Font.value)}>{t(Font.name)}</button>\n             ))}\n         </div>\n         <div className=\" row outerdiv  m-3\">\n         <button onClick={() => i18n.changeLanguage('de')} className=\"m-1\">German</button>\n        <button onClick={() => i18n.changeLanguage('en')} className=\"m-1\">English</button>\n           \n         </div>\n\n          </center>\n\n        </div>\n\n    </div>\n    </div>\n  \n  );\n}\n\nfunction App()\n{\n    return (\n        <Suspense fallback=\"loading\">\n            <div className=\"App\">\n                <Maincomponent/>\n            </div>\n        </Suspense>\n    );\n}\n\nexport default App;\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport { en_locale } from './locale/en_locale';\r\nimport { de_locale } from './locale/de_locale';\r\n\r\n\r\ni18n\r\n .use(LanguageDetector)\r\n .use(initReactI18next)\r\n .init({\r\n   resources: {\r\n     en: {\r\n       translation: en_locale\r\n     },\r\n     de: {\r\n       translation: de_locale\r\n     }\r\n   }\r\n });\r\n \r\ni18n.changeLanguage(\"en\");\r\n\r\nexport default i18n","export const en_locale = {\r\n    Title : \"Currency Converter\",\r\n    CustomTitle:\"Enter Custom Rate for conversions\",\r\n    CustomStyle:\"Custom Styling\",\r\n    RateCalculation: \"Custom Rate Calculations\",\r\n    ClearFields:\"Clear Fields\",\r\n    Goback:\"Go Back\",\r\n    Base:\"Base Currency\",\r\n    Target: \"Target Currency\",\r\n    Rate :\"Conversion Rate\",\r\n    Amount:\"Amount\",\r\n    verdana : \"Verdana\",\r\n    Trebuchet :\"Trebuchet\",\r\n    Garamond :\"Garamond\",\r\n    cursive :\"cursive\"\r\n\r\n}","export const de_locale = {\r\n\r\n    Title : \"Währung Konverter\",\r\n    CustomTitle:\"Benutzerdefinierten Preis für Conversions eingeben\",\r\n    CustomStyle:\"Benutzerdefiniertes Styling\",\r\n    RateCalculation: \"Benutzerdefinierte Preisberechnungen\",\r\n    ClearFields:\"Felder löschen\",\r\n    Goback:\"Geh zurück\",\r\n    Base:\"Hauptwährung\",\r\n    Target: \"Zielwährung\",\r\n    Rate :\"Wechselkurs\",\r\n    Amount:\"Menge\",\r\n    verdana : \"Verdana\",\r\n    Trebuchet :\"Trebuchet\",\r\n    Garamond :\"Garamond\",\r\n    cursive :\"kursiv\"\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n/i18n_config'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n    <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}